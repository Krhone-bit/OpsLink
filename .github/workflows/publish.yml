name: build-and-publish
on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  release:
    environment: prod
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            publish: true # ðŸ‘ˆ solo Linux publica
          - os: macos-latest
            publish: false
          - os: windows-latest
            publish: false

    env:
      APP_DIR: ${{ secrets.APP_DIR }}
      VENV_PY: ${{ secrets.VENV_PY }}
      DJANGO_SETTINGS_MODULE: ${{ secrets.DJANGO_SETTINGS_MODULE }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      REMOTE_HOST: ${{ secrets.REMOTE_HOST }}

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Generate prod-config.js
        shell: bash
        run: |
          mkdir -p config
          cat > config/prod-config.js << 'EOF'
          module.exports = {
            APP_DIR: "${{ secrets.APP_DIR }}",
            VENV_PY: "${{ secrets.VENV_PY }}",
            DJANGO_SETTINGS_MODULE: "${{ secrets.DJANGO_SETTINGS_MODULE }}",
            DB_HOST: "${{ secrets.DB_HOST }}",
            DB_USERNAME: "${{ secrets.DB_USERNAME }}",
            DB_PASSWORD: "${{ secrets.DB_PASSWORD }}",
            DB_NAME: "${{ secrets.DB_NAME }}",
            REMOTE_HOST: "${{ secrets.REMOTE_HOST }}"
          };
          EOF

      - name: Sync package.json version with tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          TAG="${GITHUB_REF#refs/tags/}"   # v1.7.0
          VER="${TAG#v}"                   # 1.7.0
          npm version "$VER" --no-git-tag-version

      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release: ${{ matrix.publish && startsWith(github.ref, 'refs/tags/v') }}
